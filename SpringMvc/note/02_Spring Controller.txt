02_Spring Controller.txt

# Spring Web

 - 컨트롤러는 의존성에 Spring Web을 추가해야 사용할 수 있다
 - 스프링 부트 프로젝트에는 톰캣 서버가 기본적으로 내장되어 있다
   (내장된 서버는 Boot Dashboard에서 제어할 수 있다)
 - 다양한 어노테이션을 활용해 JSP에서 힘들게 적용했던 디자인 패턴들을 간단하게 적용할 수 있다
 - Spring Web에는 Spring MVC 외에도 많은 라이브러리들이 포함되어 있다 (로깅, 바인딩, 테스트, ...등)
 
# Spring Controller

 - 클래스 위에 @Controller를 붙이면 스프링이 해당 클래스를 컨트롤러로 인식한다
 - 컨트롤러는 스프링 프로젝트에 의해 자동으로 수거되어 SpringContext에 보관되고 
   필요할때마다 알아서 사용된다
 - 컨트롤러 내부에 다양한 어노테이션들을 활용하여 원하는 요청에 대한 처리를 진행할 수 있다
 - 컨트롤러에 설정해 놓는 여러 매핑 주소들은 해당 서버의 사용법이라고도 할 수 있기 때문에
   서버 API라고 부르기도 한다
 
# Spring Controller에서 사용하는 어노테이션들

 @Controller
  
  - 해당 클래스가 컨트롤러임을 알리는 어노테이션
  
 @RequestMapping(value = {}, method = {})
 
  - 어떤 uri와 메서드로 요청이 도착했을 때 해당 요청을 처리하는 메서드임을 명시해두는 어노테이션
  - 메서드뿐만 아니라 클래스 위에도 작성이 가능하다

 @GetMapping
 
  - @RequestMapping(value = {}, method = RequestMethod.GET)을 줄인것

 @PostMapping

  - @RequestMapping(value = {}, method = RequestMethod.POST)을 줄인것

 @PutMapping, @DeleteMapping, @PathchMapping, ... (그 외 HTTP 요청 방식들)
 
  - 그 외 다른 요청 방식들에 대한 처리를 위해 사용한다
 
 @ResponseBody
 
  - 해당 컨트롤러 메서드는 웹 페이지 대신 데이터를 응답하는 컨트롤러 메서드가 된다
  - 이 어노테이션이 달려 있으면 해당 메서드는 템플릿을 찾지 않는다
 
# 스프링 컨트롤러에서 활용할 수 있는 매개변수의 종류

 (1) HttpServletRequest
 (2) HttpServletResponse
 (3) 자바빈 형식의 모델 객체 (dto, vo)
 
 	* 자바빈 형식 객체
 	
 	- 데이터를 보관하기 위한 용도의 클래스
 	- 기본 생성자가 반드시 존재해야 한다
 	- 필드의 접근 제어자는 private이어야 한다
 	- 필드에는 Getter/Setter를 사용해 접근해야 한다
 	- 다양한 프레임워크 및 라이브러리에서 표준 방식으로 사용한다
 (4) @RequestParam을 붙인 매개 변수 (파라미터 값을 바인딩 받아서 활용)
 (5) Model
  - 컨트롤러에서 뷰(.jsp 또는 .html)로 데이터를 넘기기 위해 짐을 실어놓는 객체
  - request 객체에서 어트리뷰트를 실어놓는 기능만 특화하여 분리해놓은 객체
 (6) Map (전달받은 파라미터들을 맵 타입으로 바인딩 해주기도 한다)
 
# 스프링 컨트롤러에서 사용할 수 있는 리턴 타입

 (1) String
 
 - src/main/resrouces/templates에 있는 .html 파일을 찾아간다
 - 리턴한 문자열이 templates 내부에서의 경로를 의미하게 된다.
 
 (2) void
 
 - 해당 컨트롤러에 도착하기 위해 사용했던 uri를 그대로 사용해 templates에서 알맞은 파일을 찾는다
 
 (3) ModelAndView (구식)
 
 - 다음 뷰가 어디인지에 대한 정보와 다음 뷰를 구성하기 위한 데이터를 모두 실어 놓을 수 있는 객체
 - 하나의 객체가 두 가지 일을 모두 하기 때문에 권장되지는 않는 객체

 (4) 자바빈 객체 타입
 
 - 서버가 .html 파일을 응답하는 것이 아니라 데이터 그 자체를 응답하겠다는 뜻이 된다
 - 정해진 형식으로 데이터를 응답한다
 
 (5) ResponseEntity
 
 - 원하는 응답을 처음부터 끝까지 직접 조립해서 반환하겠다는 뜻