04_Maven.txt

# Maven

 - 자바의 프로젝트 자동 관리 도구
 - 프로젝트를 진행하기 위해 필요한 여러 과정들을 자동으로 수행해주는 프로그램
   (라이브러리 관리, 프로젝트 버전 관리, 빌드 관리, 배포 관리 ...등)
 - 메이븐은 해당 프로젝트의 pom.xml 파일에 적혀있는 대로 프로젝트를 유지해주는 역할을 한다
 
# POM (Project Object Model)

 - 프로젝트에 대한 정보를 담고 있는 모델
 - 해당 프로젝트에 대한 여러 설정 및 의존성 정보 등을 담고 있다

# pom.xml

 <groupId>: 현재 프로젝트의 그룹 아이디(주로 회사명을 사용)
 <artifactId>: 현재 프로젝트의 이름 (다른 프로젝트가 우리 프로젝트를 의존하기 위한 이름)
 <version>: 현재 빌드 버전
 <name>: 프로젝트 이름
 <description>: 프로젝트 설명
 <dependencies>: 이 프로젝트에 필요한 다른 라이브러리들을 작성해 놓는곳
   <dependency/>
   <dependency/>
   <dependency/>: 다른 프로젝트의 그룹ID와 아티팩트ID를 통해 특정 라이브러리를 지정하여 메이븐이 자동으로 관리하게 한다
   <dependency/>
 </dependencies>
 
 <dependency>
	<groupId/>: 의존하려는 프로젝트의 그룹 ID
	<artifactId/>: 의존하려는 프로젝트의 아티팩트ID
	<version/>: 해당 라이브러리의 특정 버전을 선택 (버전을 지우면 최신 버전을 선택?)
	<scope/>: 이 의존성이 우리 프로젝트에서 얼만큼 사용될 것인지를 설정한다
 </dependency>
 
# scope의 종류와 역할

 - 해당 의존성이 프로젝트에서 사용되는 범위에 대한 설정
 - scope가 생략되어 있는 경우 해당 의존서으이 scope는 compile이다
 - compile: 프로젝트를 컴파일 할 때 필요한 의존성
 		 	프로젝트를 컴파일 할 때도 사용되고 배포시에도 빌드에 포함된다
 - runtime: 컴파일 할 때는 딱히 필요 없지만 배포시에는 필요한 의존성 (e.g. ojdbc)
 - provided: 컴파일 할 때는 필요하지만 프로그램 실행시에는 딱히 필요 없는 의존성 (e.g. lombok)
 - test: 테스트 단계에서만 필요한 의존성. 컴파일과 배포에 모두 포함되지 않는다.
 
# Maven의 라이브러리 자동 관리

 - Maven은 <dependancies>에 적혀있는 모든 프로젝트들을 자동으로 메이븐 중앙 서버에서
   개발을 진행하는 컴퓨터로 다운받아놓는다   
 - 이 때 메이븐에 등록된 모든 라이브러리들을 관리하는 중앙 서버를 원격 레포지토리라고 부른다
 - 다운받은 프로젝트는 사용자 폴더/.m2/repository 내부에 버전별로 보관되어 있다
   (이 때 해당 프로젝트의 groupId와 artifactId를 폴더의 경로로 사용한다)
 - 다운받은 프로젝트들을 관리하는 레포지토리는 로컬 레포지토리라고 부른다